"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.findLastContinueIndex = exports.selectRows = exports.selectCells = exports.create2dArrays = exports.getRowSpan = exports.getColSpan = exports.parseIntOrDefault = void 0;
const cheerio_1 = __importDefault(require("cheerio"));
const lodash_1 = require("lodash");
const parseIntOrDefault = (value, defaultValue) => {
    if (!value) {
        return defaultValue;
    }
    const parsed = parseInt(value);
    return !lodash_1.isInteger(parsed) ? defaultValue : parsed;
};
exports.parseIntOrDefault = parseIntOrDefault;
const getSpan = (element, config) => {
    const { tag, defaultValue, min, max } = config;
    const attr = cheerio_1.default(element).attr(tag);
    const attrValue = exports.parseIntOrDefault(attr, defaultValue);
    return attrValue >= min && attrValue <= max ? attrValue : defaultValue;
};
const getColSpan = (element, config) => getSpan(element, config.col);
exports.getColSpan = getColSpan;
const getRowSpan = (element, config) => getSpan(element, config.row);
exports.getRowSpan = getRowSpan;
const create2dArrays = (row, col, generator) => Array.from({ length: row }, () => Array.from({ length: col }, generator));
exports.create2dArrays = create2dArrays;
const selectCells = (row, config) => cheerio_1.default(config.cellSelector, row).toArray();
exports.selectCells = selectCells;
const selectRows = (table, config) => cheerio_1.default(config.rowSelector, table).toArray();
exports.selectRows = selectRows;
const findLastContinueIndex = (array, equalFn) => {
    let index = -1;
    for (let i = array.length - 1; i >= 0; i--) {
        if (!equalFn(array[i])) {
            break;
        }
        index = i;
    }
    return index;
};
exports.findLastContinueIndex = findLastContinueIndex;
//# sourceMappingURL=func.js.map